// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace agendaAulas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250914015351_Migration1.0.0")]
    partial class Migration100
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("agendaAulas.models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("integer");

                    b.Property<int>("AulaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("AulaId");

                    b.ToTable("Agendamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlunoId = 1,
                            AulaId = 1
                        },
                        new
                        {
                            Id = 2,
                            AlunoId = 2,
                            AulaId = 2
                        },
                        new
                        {
                            Id = 3,
                            AlunoId = 3,
                            AulaId = 3
                        },
                        new
                        {
                            Id = 4,
                            AlunoId = 4,
                            AulaId = 4
                        },
                        new
                        {
                            Id = 5,
                            AlunoId = 5,
                            AulaId = 5
                        },
                        new
                        {
                            Id = 6,
                            AlunoId = 6,
                            AulaId = 6
                        },
                        new
                        {
                            Id = 7,
                            AlunoId = 7,
                            AulaId = 7
                        },
                        new
                        {
                            Id = 8,
                            AlunoId = 8,
                            AulaId = 8
                        },
                        new
                        {
                            Id = 9,
                            AlunoId = 9,
                            AulaId = 9
                        },
                        new
                        {
                            Id = 10,
                            AlunoId = 10,
                            AulaId = 10
                        });
                });

            modelBuilder.Entity("agendaAulas.models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoPlano")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Ana Silva",
                            TipoPlano = 1
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Bruno Costa",
                            TipoPlano = 3
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Carla Souza",
                            TipoPlano = 12
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Diego Rocha",
                            TipoPlano = 1
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Eduarda Lima",
                            TipoPlano = 3
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Felipe Martins",
                            TipoPlano = 12
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Gabriela Almeida",
                            TipoPlano = 1
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Henrique Santos",
                            TipoPlano = 3
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Isabela Nunes",
                            TipoPlano = 12
                        },
                        new
                        {
                            Id = 10,
                            Nome = "João Pedro",
                            TipoPlano = 1
                        });
                });

            modelBuilder.Entity("agendaAulas.models.Aula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadeMax")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("DataHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TipoAulaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TipoAulaId");

                    b.ToTable("Aulas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacidadeMax = 10,
                            DataHora = new DateTimeOffset(new DateTime(2025, 9, 15, 9, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TipoAulaId = 1
                        },
                        new
                        {
                            Id = 2,
                            CapacidadeMax = 12,
                            DataHora = new DateTimeOffset(new DateTime(2025, 9, 16, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TipoAulaId = 1
                        },
                        new
                        {
                            Id = 3,
                            CapacidadeMax = 15,
                            DataHora = new DateTimeOffset(new DateTime(2025, 9, 17, 11, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TipoAulaId = 1
                        },
                        new
                        {
                            Id = 4,
                            CapacidadeMax = 8,
                            DataHora = new DateTimeOffset(new DateTime(2025, 9, 18, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TipoAulaId = 1
                        },
                        new
                        {
                            Id = 5,
                            CapacidadeMax = 20,
                            DataHora = new DateTimeOffset(new DateTime(2025, 9, 19, 13, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TipoAulaId = 2
                        },
                        new
                        {
                            Id = 6,
                            CapacidadeMax = 10,
                            DataHora = new DateTimeOffset(new DateTime(2025, 9, 15, 14, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TipoAulaId = 2
                        },
                        new
                        {
                            Id = 7,
                            CapacidadeMax = 18,
                            DataHora = new DateTimeOffset(new DateTime(2025, 9, 16, 15, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TipoAulaId = 2
                        },
                        new
                        {
                            Id = 8,
                            CapacidadeMax = 12,
                            DataHora = new DateTimeOffset(new DateTime(2025, 9, 17, 16, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TipoAulaId = 3
                        },
                        new
                        {
                            Id = 9,
                            CapacidadeMax = 14,
                            DataHora = new DateTimeOffset(new DateTime(2025, 9, 18, 17, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TipoAulaId = 3
                        },
                        new
                        {
                            Id = 10,
                            CapacidadeMax = 16,
                            DataHora = new DateTimeOffset(new DateTime(2025, 9, 19, 18, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TipoAulaId = 3
                        });
                });

            modelBuilder.Entity("agendaAulas.models.TipoAula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoAulas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Pilates"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Cross"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Funcional"
                        });
                });

            modelBuilder.Entity("agendaAulas.models.Agendamento", b =>
                {
                    b.HasOne("agendaAulas.models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("agendaAulas.models.Aula", "Aula")
                        .WithMany()
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Aula");
                });

            modelBuilder.Entity("agendaAulas.models.Aula", b =>
                {
                    b.HasOne("agendaAulas.models.TipoAula", "TipoAula")
                        .WithMany()
                        .HasForeignKey("TipoAulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoAula");
                });
#pragma warning restore 612, 618
        }
    }
}
